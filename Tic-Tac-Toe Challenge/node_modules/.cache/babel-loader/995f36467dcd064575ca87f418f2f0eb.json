{"ast":null,"code":"// Keep the content of CalculateWinner.js as it is, just export the function:\nconst calculateWinner = squares => {\n  const combos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < combos.length; i++) {\n    const [a, b, c] = combos[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n};\n\nexport default calculateWinner;","map":{"version":3,"names":["calculateWinner","squares","combos","i","length","a","b","c"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe-tomas-andrew/Tic-Tac-Toe Challenge/src/components/CalculateWinner.js"],"sourcesContent":["// Keep the content of CalculateWinner.js as it is, just export the function:\nconst calculateWinner = (squares) => {\n    const combos = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n  \n    for (let i = 0; i < combos.length; i++) {\n      const [a, b, c] = combos[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  \n    return null\n  };\n  \n  export default calculateWinner\n  \n"],"mappings":"AAAA;AACA,MAAMA,eAAe,GAAIC,OAAD,IAAa;EACjC,MAAMC,MAAM,GAAG,CACb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADa,EAEb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFa,EAGb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHa,EAIb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJa,EAKb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALa,EAMb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANa,EAOb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPa,EAQb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARa,CAAf;;EAWA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACtC,MAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,MAAM,CAACC,CAAD,CAAxB;;IACA,IAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;MACxE,OAAON,OAAO,CAACI,CAAD,CAAd;IACD;EACF;;EAED,OAAO,IAAP;AACD,CApBH;;AAsBE,eAAeL,eAAf"},"metadata":{},"sourceType":"module"}