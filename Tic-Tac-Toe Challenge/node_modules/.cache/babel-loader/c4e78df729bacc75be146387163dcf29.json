{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-tomas-andrew/Tic-Tac-Toe Challenge/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Square from './components/Square';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const nextSquare = squares.slice();\n  nextSquare[i] = xIsNext ? \"x\" : \"o\";\n  setSquares(nextSquare);\n  setXIsNext(!xIsNext); // const switchTurn = (i) => {\n  //   let newPlayer;\n  //   if(oIsNext)\n  //   {return newPlayer = \"o\"}\n  //   else {\n  //    return newPlayer = \"x\"\n  //   } \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // const calculateWinner = (squares) => {\n//   const combos = [\n//    [0, 1, 2],\n//    [3, 4, 5],\n//    [6, 7, 8],\n//    [0, 3, 6],\n//    [1, 4, 7],\n//    [2, 5, 8],\n//    [0, 4, 8],\n//    [2, 4, 6],\n//   ] \n//   for(i=0; i<combos.length; i++) \n//   {const [a, b, c] = combos[i] \n//  if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n//  return squares[a]}\n//  } \n//  return null\n\n\n_s(App, \"wTO2hpxpqozRtberum9qOOyGlUY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Square","App","squares","setSquares","Array","fill","xIsNext","setXIsNext","nextSquare","slice","i"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe-tomas-andrew/Tic-Tac-Toe Challenge/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nconst App = () => {\n  const [squares, setSquares] = useState(Array(9).fill(null))\n  const [xIsNext, setXIsNext] = useState(true)\n\nconst nextSquare = squares.slice()\n  nextSquare[i] = xIsNext? \"x\": \"o\"\nsetSquares(nextSquare) \n\nsetXIsNext(!xIsNext)\n\n\n\n\n// const switchTurn = (i) => {\n//   let newPlayer;\n//   if(oIsNext)\n//   {return newPlayer = \"o\"}\n//   else {\n//    return newPlayer = \"x\"\n//   } \n  \n\n\n  return (\n    <>\n      <h1>Tic Tac Toe</h1>\n  \n    </>\n  )\n}\n// const calculateWinner = (squares) => {\n//   const combos = [\n//    [0, 1, 2],\n//    [3, 4, 5],\n//    [6, 7, 8],\n//    [0, 3, 6],\n//    [1, 4, 7],\n//    [2, 5, 8],\n//    [0, 4, 8],\n//    [2, 4, 6],\n//   ] \n//   for(i=0; i<combos.length; i++) \n//   {const [a, b, c] = combos[i] \n//  if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n//  return squares[a]}\n//  } \n//  return null\n \n\nexport default App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAtC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EAEF,MAAMS,UAAU,GAAGN,OAAO,CAACO,KAAR,EAAnB;EACED,UAAU,CAACE,CAAD,CAAV,GAAgBJ,OAAO,GAAE,GAAF,GAAO,GAA9B;EACFH,UAAU,CAACK,UAAD,CAAV;EAEAD,UAAU,CAAC,CAACD,OAAF,CAAV,CARkB,CAalB;EACA;EACA;EACA;EACA;EACA;EACA;;EAIE,oBACE;IAAA,uBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAMD,CA7BD,C,CA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA9CML,G;;KAAAA,G;AAiDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}